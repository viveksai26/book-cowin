{"version":3,"sources":["./src/app/modules/core/errors/error-service/error-service.service.ts","./src/environments/environment.ts","./src/app/modules/feature/secure/secure-routing.module.ts","./src/app/modules/shared/shared.module.ts","./src/app/modules/shared/constants/application-url.ts","./src/app/modules/shared/services/authentication.service.ts","./src/app/modules/shared/style/app-material.module.ts","./src/app/modules/core/errors/error-routing/error-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/modules/core/errors/error.module.ts","./src/app/app.module.ts","./src/app/modules/feature/public/public.module.ts","./src/app/modules/feature/public/public-routing.module.ts","./src/app/modules/core/services/notification/snackbar.component.ts","./src/app/modules/core/services/notification/snackbar.component.html","./src/app/modules/core/errors/error-handler/error-handler.ts","./src/app/modules/feature/secure/secure.module.ts","./src/app/app-routing.module.ts","./src/app/modules/core/services/notification.service.ts","./src/app/modules/core/errors/error-component/error-component.component.ts","./src/app/modules/core/errors/error-component/error-component.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable, Injector } from '@angular/core';\nimport { Event, NavigationError, Router } from '@angular/router';\nimport { of } from 'rxjs';\n\n@Injectable()\nexport class ErrorServiceService {\n  constructor(private injector: Injector, private router: Router) {\n    this.router.events.subscribe((event: Event) => {\n      if (event instanceof NavigationError) {\n        this.log(event.error).subscribe((errorWithContext) => {\n          this.router.navigate(['/error'], { queryParams: errorWithContext });\n        });\n      }\n    });\n  }\n  log(error: any) {\n    const errorToSend = this.addContext(error);\n    // Send error to server.\n    return of(errorToSend);\n  }\n  addContext(error: any) {\n    return error;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nconst routes: Routes = [\n  {\n    path: 'home',\n    loadChildren: () => import('./home/home.module').then((module) => module.HomeModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SecureRoutingModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { AppMaterialModule } from \"./style/app-material.module\";\n\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        AppMaterialModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    exports: [\n        CommonModule,\n        AppMaterialModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    declarations: []\n})\nexport class SharedModule {}","\n\n\nexport class ApplicationUrl {\n    public static generateOTP = 'https://cdn-api.co-vin.in/api/v2/auth/public/generateOTP'\n    public static generateToken = 'https://cdn-api.co-vin.in/api/v2/auth/public/confirmOTP'\n}","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { ApplicationUrl } from \"../constants/application-url\";\n\n\n@Injectable({ providedIn: 'root'})\nexport class AuthenticationService {\n    constructor(private http: HttpClient) {}\n    generateOTP(mobileNumber: any): any {\n        return this.http.post(ApplicationUrl.generateOTP, mobileNumber)\n    }\n\n    generateToken(TokenObject: any): any {\n        return this.http.post(ApplicationUrl.generateToken, TokenObject);\n    }\n}","import { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport {MatStepperModule} from '@angular/material/stepper';\n\n@NgModule({\n  imports: [\n    MatButtonModule,\n    MatCardModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatButtonToggleModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatStepperModule\n  ],\n  exports: [\n    MatButtonModule,\n    MatCardModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatButtonToggleModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatStepperModule\n  ]\n})\nexport class AppMaterialModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ErrorComponentComponent } from '../error-component/error-component.component';\n\nconst routes: Routes = [\n  {\n    path: 'error',\n    component: ErrorComponentComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class ErrorRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { NotificationService } from './modules/core/services/notification.service';\nimport { AuthenticationService } from './modules/shared/services/authentication.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  constructor(private authenticationService: AuthenticationService, private notificationService: NotificationService) {}\n  title = 'bookCowin';\n  ngOnInit() {\n  }\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { ErrorComponentComponent } from './error-component/error-component.component';\nimport { ErrorServiceService } from './error-service/error-service.service';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ErrorRoutingModule } from './error-routing/error-routing.module';\nimport { SharedModule } from '../../shared/shared.module';\nimport { CustomErrorHandler } from './error-handler/error-handler';\n\n@NgModule({\n  declarations: [ErrorComponentComponent],\n  imports: [CommonModule, RouterModule, ErrorRoutingModule, SharedModule],\n  providers: [\n    ErrorServiceService,\n    {\n      provide: ErrorHandler,\n      useClass: CustomErrorHandler\n    }\n  ]\n})\nexport class ErrorModule {}\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ErrorModule } from './modules/core/errors/error.module';\nimport { SharedModule } from './modules/shared/shared.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { PublicModule } from './modules/feature/public/public.module';\nimport { SecureModule } from './modules/feature/secure/secure.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    CommonModule,\n    SharedModule,\n    RouterModule,\n    HttpClientModule,\n    ErrorModule,\n    BrowserAnimationsModule,\n    PublicModule,\n    SecureModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { PublicRoutingModule } from './public-routing.module';\nimport { LoginComponent } from './login/login.component';\n\n@NgModule({\n  imports: [PublicRoutingModule],\n  declarations: []\n})\nexport class PublicModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: 'login',\n    loadChildren: () => import('./login/login.module').then((module) => module.LoginModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PublicRoutingModule {}\n","import { Component, Inject } from '@angular/core';\nimport { MatSnackBar, MatSnackBarRef, MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\nimport { NotificationService } from '../notification.service';\n\n/**\n * @title Basic snack-bar\n */\n@Component({\n  selector: 'snack-bar-overview-example',\n  templateUrl: 'snackbar.component.html',\n  styleUrls: ['snackbar.component.css']\n})\nexport class SnackBarComponent {\n  constructor(private snackRef: MatSnackBarRef<NotificationService>, @Inject(MAT_SNACK_BAR_DATA) public data: any) {}\n}\n","<div class=\"row\">\n    <div class=\"col-md-12 d-flex justify-content-between\" style=\"color: aliceblue;\">\n        <span>{{data.message}}</span>\n        <span>{{data.action}}</span>\n    </div>\n</div>","import { Injectable, Injector, NgZone, ErrorHandler } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ErrorServiceService } from '../error-service/error-service.service';\n\n@Injectable()\nexport class CustomErrorHandler implements ErrorHandler {\n  constructor(private injector: Injector) {}\n  handleError(error: Error | HttpErrorResponse): any {\n    const errorService = this.injector.get(ErrorServiceService);\n    const router = this.injector.get(Router);\n    const ngZone = this.injector.get(NgZone);\n    if (error instanceof HttpErrorResponse) {\n      return error;\n    }\n    errorService.log(error).subscribe((errorWithContext) => {\n      ngZone.run(() => {\n        router.navigate(['/error'], { queryParams: { error: errorWithContext } });\n      });\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { SecureRoutingModule } from './secure-routing.module';\n@NgModule({\n  imports: [SecureRoutingModule]\n})\nexport class SecureModule {}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/home',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { BehaviorSubject } from 'rxjs';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SnackBarComponent } from './notification/snackbar.component';\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n  isMenuVisible: any = new BehaviorSubject(false);\n  snackBarRef: any;\n  constructor(private snackBar: MatSnackBar, public dialog: MatDialog) {}\n  openSnackBar(message: string, action: string) {\n    this.snackBarRef = this.snackBar.openFromComponent(SnackBarComponent, {\n      duration: 5000,\n      data: { message, action },\n      verticalPosition: 'top',\n      horizontalPosition: 'center'\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-error-component',\n  templateUrl: './error-component.component.html',\n  styleUrls: ['./error-component.component.css']\n})\nexport class ErrorComponentComponent implements OnInit {\n  data: any;\n  constructor(private activatedRoute: ActivatedRoute, private router: Router) {}\n\n  ngOnInit(): void {\n    this.data = this.activatedRoute.snapshot.queryParams;\n  }\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-md-12 d-flex justify-content-center\">\n            <h1>Something's wrong</h1>\n        </div>\n        <div class=\"col-md-12 d-flex justify-content-center\">\n            {{data?.error}}\n        </div>\n    </div>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}